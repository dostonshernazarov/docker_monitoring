services:
  db:
    container_name: monitor_postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: docker_monitor
    networks:
      - docker_monitor_network
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d docker_monitor"]
      interval: 30s
      timeout: 10s
      retries: 3

  migrate:
    image: migrate/migrate
    networks:
      - docker_monitor_network
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  "postgres://postgres:yourpassword@monitor_postgres:5432/docker_monitor?sslmode=disable", "up" ]
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    networks:
      - docker_monitor_network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - docker_monitor_network
    depends_on:
      - backend


  pinger:
    build: ./pinger
    networks:
      - docker_monitor_network
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx
    ports:
    - "80:80"
    networks:
      - docker_monitor_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend

networks:
  docker_monitor_network:
    driver: bridge

volumes:
  postgres_data: